# Generated by Django 4.2.7 on 2025-08-26 17:17

import cloudinary.models
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suffix', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], max_length=1)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['session__start_year', 'school_class__level_order', 'suffix'],
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{8,15}$', 'Phone number must be 8-15 digits, optionally starting with +.')])),
                ('full_name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('photo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('Creche', 'Creche'), ('Pre-Nursery', 'Pre-Nursery'), ('Nursery 1', 'Nursery 1'), ('Nursery 2', 'Nursery 2'), ('Nursery 3', 'Nursery 3'), ('Primary 1', 'Primary 1'), ('Primary 2', 'Primary 2'), ('Primary 3', 'Primary 3'), ('Primary 4', 'Primary 4'), ('Primary 5', 'Primary 5'), ('JSS 1', 'JSS 1'), ('JSS 2', 'JSS 2'), ('JSS 3', 'JSS 3'), ('SS 1', 'SS 1'), ('SS 2', 'SS 2'), ('SS 3', 'SS 3')], max_length=20, unique=True)),
                ('section', models.CharField(choices=[('Nursery', 'Nursery'), ('Primary', 'Primary'), ('Junior', 'Junior'), ('Senior', 'Senior')], max_length=20)),
                ('level_order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('admission_number', models.CharField(max_length=7, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('address', models.TextField()),
                ('parent_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('nationality', models.CharField(default='Nigeria', max_length=100)),
                ('enrollment_year', models.CharField(max_length=4, validators=[django.core.validators.RegexValidator('^\\d{4}$')])),
                ('token', models.CharField(default='0KC70oVsMy', max_length=10, unique=True)),
                ('photo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('current_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='accounts.schoolclass')),
                ('current_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='accounts.classsection')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='accounts.parent')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('school_email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('nationality', models.CharField(default='Nigeria', max_length=100)),
                ('photo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('section', models.CharField(choices=[('Nursery', 'Nursery'), ('Primary', 'Primary'), ('Junior', 'Junior'), ('Senior', 'Senior')], max_length=20)),
                ('compulsory', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('school_class', models.ManyToManyField(related_name='subjects', to='accounts.schoolclass')),
            ],
        ),
        migrations.CreateModel(
            name='StudentSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'First Term'), ('2', 'Second Term'), ('3', 'Third Term')], max_length=1)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.teacher')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_subjects', to='accounts.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_students', to='accounts.subject')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFeeOverride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'First Term'), ('2', 'Second Term'), ('3', 'Third Term')], max_length=1)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Custom fee amount for this student, session, and term (in XOF)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fee_overrides', to='accounts.student')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentClassHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'First Term'), ('2', 'Second Term'), ('3', 'Third Term')], max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.schoolclass')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.classsection')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_history', to='accounts.student')),
            ],
            options={
                'verbose_name_plural': 'Student Class Histories',
            },
        ),
        migrations.CreateModel(
            name='ResultAccessRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'First'), ('2', 'Second'), ('3', 'Third')], max_length=10)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Denied', 'Denied')], default='Pending', max_length=20)),
                ('requested_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('handled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.student')),
            ],
            options={
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'First Term'), ('2', 'Second Term'), ('3', 'Third Term')], max_length=1)),
                ('ca', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('test_1', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('test_2', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('exam', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(70)])),
                ('test', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('homework', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('classwork', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('nursery_primary_exam', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('total_marks', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_score', models.FloatField(default=0.0)),
                ('grade', models.CharField(blank=True, max_length=5)),
                ('grade_point', models.FloatField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=50)),
                ('subject_position', models.CharField(blank=True, max_length=10)),
                ('class_position', models.CharField(blank=True, max_length=10)),
                ('class_position_gp', models.CharField(blank=True, max_length=10)),
                ('upload_date', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, max_length=500, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='accounts.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.subject')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'First Term'), ('2', 'Second Term'), ('3', 'Third Term')], max_length=1)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Refund amount for this parent, session, and term (in XOF)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('reason', models.TextField(default='Fee reduction overpayment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='accounts.parent')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.session')),
            ],
        ),
        migrations.CreateModel(
            name='PTADues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'First Term'), ('2', 'Second Term'), ('3', 'Third Term')], default='1', max_length=1)),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('2000.00'), help_text='PTA dues amount for this session and term (in XOF)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pta_dues', to='accounts.session')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'First Term'), ('2', 'Second Term'), ('3', 'Third Term')], max_length=1)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('transaction_id', models.CharField(default=uuid.uuid4, max_length=36, unique=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Failed', 'Failed')], default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='accounts.parent')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.session')),
                ('students', models.ManyToManyField(blank=True, related_name='payments', to='accounts.student')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'First Term'), ('2', 'Second Term'), ('3', 'Third Term')], max_length=1)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Fee amount for this class level, session, and term (in XOF)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.schoolclass')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fee_structures', to='accounts.session')),
            ],
        ),
        migrations.AddField(
            model_name='classsection',
            name='school_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='accounts.schoolclass'),
        ),
        migrations.AddField(
            model_name='classsection',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.session'),
        ),
        migrations.AddField(
            model_name='classsection',
            name='teachers',
            field=models.ManyToManyField(blank=True, related_name='assigned_sections', to='accounts.teacher'),
        ),
        migrations.CreateModel(
            name='TermConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'First Term'), ('2', 'Second Term'), ('3', 'Third Term')], max_length=1)),
                ('start_month', models.IntegerField(help_text='Month when the term starts (1-12).', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('end_month', models.IntegerField(help_text='Month when the term ends (1-12).', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('start_day', models.IntegerField(default=1, help_text='Day of the month when the term starts.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('end_day', models.IntegerField(default=28, help_text='Day of the month when the term ends.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('session', models.ForeignKey(blank=True, help_text='Optional: Link to a specific session. If null, applies globally.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='term_configurations', to='accounts.session')),
            ],
            options={
                'indexes': [models.Index(fields=['session', 'term'], name='accounts_te_session_f6b3b0_idx'), models.Index(fields=['start_month', 'end_month'], name='accounts_te_start_m_349535_idx')],
                'unique_together': {('session', 'term')},
            },
        ),
        migrations.AddIndex(
            model_name='teacher',
            index=models.Index(fields=['school_email'], name='accounts_te_school__77e8ee_idx'),
        ),
        migrations.AddIndex(
            model_name='teacher',
            index=models.Index(fields=['is_active'], name='accounts_te_is_acti_f29a08_idx'),
        ),
        migrations.AddIndex(
            model_name='teacher',
            index=models.Index(fields=['surname', 'first_name'], name='accounts_te_surname_e20d7f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentsubject',
            unique_together={('student', 'subject', 'session', 'term')},
        ),
        migrations.AddIndex(
            model_name='studentfeeoverride',
            index=models.Index(fields=['student', 'session', 'term'], name='accounts_st_student_183696_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentfeeoverride',
            unique_together={('student', 'session', 'term')},
        ),
        migrations.AddIndex(
            model_name='studentclasshistory',
            index=models.Index(fields=['student', 'session', 'term'], name='accounts_st_student_11b455_idx'),
        ),
        migrations.AddIndex(
            model_name='studentclasshistory',
            index=models.Index(fields=['session'], name='accounts_st_session_9b31e0_idx'),
        ),
        migrations.AddIndex(
            model_name='studentclasshistory',
            index=models.Index(fields=['term'], name='accounts_st_term_992887_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentclasshistory',
            unique_together={('student', 'session', 'term')},
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['admission_number'], name='accounts_st_admissi_4a266a_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['current_class'], name='accounts_st_current_f38028_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['current_section'], name='accounts_st_current_f30393_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['is_active'], name='accounts_st_is_acti_5a77ba_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['surname', 'first_name'], name='accounts_st_surname_b4bc98_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['first_name'], name='accounts_st_first_n_87c021_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['middle_name'], name='accounts_st_middle__425250_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['surname'], name='accounts_st_surname_01ec51_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='resultaccessrequest',
            unique_together={('student', 'session', 'term')},
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['session'], name='accounts_re_session_f2067c_idx'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['term'], name='accounts_re_term_dc4a77_idx'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['student', 'session', 'term'], name='accounts_re_student_085da9_idx'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['class_position'], name='accounts_re_class_p_e1f37a_idx'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['class_position_gp'], name='accounts_re_class_p_6f0a02_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together={('student', 'subject', 'session', 'term')},
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['parent', 'session', 'term'], name='accounts_re_parent__34e27f_idx'),
        ),
        migrations.AddIndex(
            model_name='ptadues',
            index=models.Index(fields=['session', 'term'], name='accounts_pt_session_1aea02_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ptadues',
            unique_together={('session', 'term')},
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['transaction_id'], name='accounts_pa_transac_94711a_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['parent', 'session', 'term'], name='accounts_pa_parent__1019ab_idx'),
        ),
        migrations.AddIndex(
            model_name='parent',
            index=models.Index(fields=['phone_number'], name='accounts_pa_phone_n_1b5dba_idx'),
        ),
        migrations.AddIndex(
            model_name='feestructure',
            index=models.Index(fields=['session', 'term', 'class_level'], name='accounts_fe_session_a610d1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='feestructure',
            unique_together={('session', 'term', 'class_level')},
        ),
        migrations.AlterUniqueTogether(
            name='classsection',
            unique_together={('school_class', 'suffix', 'session')},
        ),
    ]
